#!/bin/bash
# Auto set CPU affinity for mpd/squeezelite

# set -x

player=${1:-mpd} # could be mpd/squeezelite
lwp_num=${2:-3}

waitfor(){
  proc=$1
  expect_lwp_num=${2:-1}
  timeout=${3:-10}
  for c in $(seq 1 ${timeout});do
    lwp_num=$(pgrep -wc ${proc})
    if [[ ${lwp_num} -lt ${expect_lwp_num} ]] ;then
      echo "# WARN: wait for ${proc} $c/$timeout, current lwp_num=${lwp_num}, expected ${expect_lwp_num}"
      sleep 1 && continue
    else
      break
    fi
  done
}


echo "# INFO: Re-Schedule ${player} ...."

waitfor ${player} ${lwp_num}

case "${player}" in
  mpd)
    # Sometimes... rtio_tid/output_tid not appear, for safety set master process first
    export master_pid=$(pidof mpd||pgrep mpd||cat /var/run/mpd/pid)
    if [[ -n $master_pid ]];then
      echo "# INFO: Change MPD master process affinity..."
      taskset -p --cpu-list 2-3  $master_pid
    else
      echo "# ERROR: MPD master process pid not got!!!"
    fi

    export rtio_tid=''
    export output_tid=''
    for c in 1 2 3 4 5;do
      [[ -z ${rtio_tid} ]]   && rtio_tid=$(ps -q $master_pid -eL -o lwp,psr,cls,comm,args|awk '($4~"rtio"){print $1}')
      [[ -z ${output_tid} ]] && output_tid=$(ps -q $master_pid -eL -o lwp,psr,cls,comm,args|awk '($4~"output"){print $1}')
      if [[ -n ${rtio_tid} && -n ${output_tid} ]]; then
        break
      else
        sleep 0.5
      fi
    done

    if [[ -n $rtio_tid ]];then
      echo "# INFO: change mpd:rtio thread affinity..."
      taskset -p --cpu-list 2  $rtio_tid
    else
      echo "# ERROR: mpd:rtio thread id not got!!!"
    fi
    if [[ -n $output_tid ]];then
      echo "# INFO: change mpd:output thread affinity..."
      for otid in $output_tid ;do
        taskset -p --cpu-list 3  $otid
      done
    else
      echo "# ERROR: mpd:output thread id not got!!!"
    fi

    echo "# INFO: change other mpd low-prio thread affinity to spread all cpus ..."
    ps -q $master_pid -eL -o lwp,psr,cls,comm,args|awk '($5~"mpd" && ($4=="mpd" || $4=="player" || $4~"decoder" || $4=="io" || $4=="update")){print $1}'| while read tid;
    do
     taskset -p --cpu-list 2  $tid
     chrt --rr -p 30 $tid
    done
  ;;
  squeezelite)
    # get tid list, FF first
    sqlplist=( $(ps -q $(pgrep -d, ${player}) -eL -o lwp,cls,psr,comm,args | awk -v player=${player} '($4 ~ player){ if($2 == "FF"){ ffp=$1 }else{ tsp= tsp" "$1} }END{print ffp,tsp}' ) )

    # FF tid
    taskset -p --cpu-list 3  ${sqlplist[0]}
    # TS tid
    for tid in ${sqlplist[@]:1} ;do
    taskset -p --cpu-list 2  $tid
    done

  ;;

esac

echo "#  Final CPU Affinity status for dwc_otg/${player}:"
ps -q $(pgrep -d, 'mpd|squeezelite') -eL -o class,pid,lwp,psr,rtprio,pri,nice,sched,comm,args

